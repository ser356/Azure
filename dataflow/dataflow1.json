{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "InputCovidCSV",
						"type": "DatasetReference"
					},
					"name": "entradablob"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "InputCovidCSV_Mod",
						"type": "DatasetReference"
					},
					"name": "salidaMain"
				},
				{
					"dataset": {
						"referenceName": "GroupByFecha",
						"type": "DatasetReference"
					},
					"name": "salidaAgg"
				}
			],
			"transformations": [
				{
					"name": "aggregate1"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          dateRep as timestamp 'dd/MM/yyyy',",
				"          day as string,",
				"          month as string,",
				"          year as string,",
				"          cases as string,",
				"          deaths as string,",
				"          countriesAndTerritories as string,",
				"          geoId as string,",
				"          countryterritoryCode as string,",
				"          popData2020 as string,",
				"          continentExp as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     inferDriftedColumnTypes: true,",
				"     ignoreNoFilesFound: false) ~> entradablob",
				"entradablob aggregate(groupBy(dateRep),",
				"     muertosTotal = sum(toInteger(deaths))) ~> aggregate1",
				"aggregate1 derive(dateRep = dropRight(toString(dateRep), length(\"00:00:00\"))) ~> derivedColumn1",
				"entradablob sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['data.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1),",
				"     preCommands: [],",
				"     postCommands: []) ~> salidaMain",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['deaths.csv'],",
				"     dateFormat:'yyyy/MM/dd',",
				"     partitionBy('hash', 1)) ~> salidaAgg"
			]
		}
	}
}